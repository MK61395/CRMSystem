{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/customer';\n  }\n  getAllCustomers() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Error fetching customers:', error);\n      return throwError(() => new Error(error.message));\n    }));\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAY3C,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,eAAe;EAEQ;EAExCC,eAAe;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAChDP,UAAU,CAAEQ,KAAwB,IAAI;MACtCC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAOT,UAAU,CAAC,MAAM,IAAIW,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;IACnD,CAAC,CAAC,CACH;EACH;;AAZWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAW,SAAfX,eAAe;EAAAY,YAFd;AAAM","names":["throwError","catchError","CustomerService","constructor","http","getAllCustomers","get","apiUrl","pipe","error","console","Error","message","factory","providedIn"],"sourceRoot":"","sources":["D:\\Visual Studio 2022\\CRMSystem\\ClientApp\\src\\app\\services\\customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface Customer {\n  id: number;\n  name: string;\n  email: string;\n  phoneNumber: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  private apiUrl = '/api/customer';\n\n  constructor(private http: HttpClient) { }\n\n  getAllCustomers(): Observable<Customer[]> {\n    return this.http.get<Customer[]>(this.apiUrl).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error fetching customers:', error);\n        return throwError(() => new Error(error.message));\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}