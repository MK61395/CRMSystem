{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/customer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CustomerComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_li_16_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteCustomer(customer_r1.id));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function CustomerComponent_li_16_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const customer_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateCustomer(customer_r1.id));\n    });\n    i0.ɵɵtext(5, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const customer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", customer_r1.name, \" - \", customer_r1.email, \" - \", customer_r1.phoneNumber, \" \");\n  }\n}\nexport class CustomerComponent {\n  constructor(customerService) {\n    this.customerService = customerService;\n    this.customers = [];\n    this.errorMessage = '';\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.customerService.getAllCustomers().subscribe({\n      next: data => {\n        this.customers = data;\n        this.loading = false;\n        console.log('Customers loaded:', data);\n      },\n      error: error => {\n        this.errorMessage = 'Error loading customers: ' + error.message;\n        this.loading = false;\n        console.error('Error:', error);\n      }\n    });\n  }\n}\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[3, \"submit\"], [\"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"phoneNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Customer List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function CustomerComponent_Template_form_submit_3_listener() {\n        return ctx.createCustomer();\n      });\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.customer.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.customer.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \"Phone Number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.customer.phoneNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵtext(14, \"Add Customer\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"ul\");\n      i0.ɵɵtemplate(16, CustomerComponent_li_16_Template, 6, 3, \"li\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.phoneNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IAkBIA,0BAAuC;IACrCA,YACA;IAAAA,iCAA8C;IAAtCA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IAC7DA,iCAA8C;IAAtCA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAACA,oBAAI;IAAAA,iBAAS;;;;IAF3DA,eACA;IADAA,2GACA;;;ACbN,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAJnC,cAAS,GAAU,EAAE;IACrB,iBAAY,GAAW,EAAE;IACzB,YAAO,GAAY,KAAK;EAEgC;EAExDC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACF,eAAe,CAACG,eAAe,EAAE,CACnCC,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,SAAS,GAAGD,IAAI;QACrB,IAAI,CAACJ,OAAO,GAAG,KAAK;QACpBM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MACxC,CAAC;MACDI,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACC,YAAY,GAAG,2BAA2B,GAAGD,KAAK,CAACE,OAAO;QAC/D,IAAI,CAACV,OAAO,GAAG,KAAK;QACpBM,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;KACD,CAAC;EACN;;AAtBWZ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP9BpB,2BAAK;MACCA,6BAAa;MAAAA,iBAAK;MAGtBA,+BAAkC;MAA5BA;QAAA,OAAUqB,oBAAgB;MAAA,EAAC;MAC/BrB,6BAAO;MAAAA,sBAAM;MAAAA,iBAAQ;MACrBA,gCAAwD;MAAjDA;QAAA;MAAA,EAA2B;MAAlCA,iBAAwD;MAExDA,6BAAO;MAAAA,uBAAO;MAAAA,iBAAQ;MACtBA,gCAA0D;MAAnDA;QAAA;MAAA,EAA4B;MAAnCA,iBAA0D;MAE1DA,8BAAO;MAAAA,+BAAc;MAAAA,iBAAQ;MAC7BA,iCAAsE;MAA/DA;QAAA;MAAA,EAAkC;MAAzCA,iBAAsE;MAEtEA,kCAAsB;MAAAA,6BAAY;MAAAA,iBAAS;MAG7CA,2BAAI;MACFA,kEAIK;MACPA,iBAAK;;;MAjBIA,eAA2B;MAA3BA,2CAA2B;MAG3BA,eAA4B;MAA5BA,4CAA4B;MAG5BA,eAAkC;MAAlCA,kDAAkC;MAMhBA,eAAY;MAAZA,uCAAY","names":["i0","CustomerComponent","constructor","customerService","ngOnInit","loading","getAllCustomers","subscribe","next","data","customers","console","log","error","errorMessage","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Visual Studio 2022\\CRMSystem\\ClientApp\\src\\app\\customer\\customer.component.html","D:\\Visual Studio 2022\\CRMSystem\\ClientApp\\src\\app\\customer\\customer.component.ts"],"sourcesContent":["<div>\r\n  <h1>Customer List</h1>\r\n\r\n  <!-- Add customer form -->\r\n  <form (submit)=\"createCustomer()\">\r\n    <label>Name: </label>\r\n    <input [(ngModel)]=\"customer.name\" name=\"name\" required>\r\n\r\n    <label>Email: </label>\r\n    <input [(ngModel)]=\"customer.email\" name=\"email\" required>\r\n\r\n    <label>Phone Number: </label>\r\n    <input [(ngModel)]=\"customer.phoneNumber\" name=\"phoneNumber\" required>\r\n\r\n    <button type=\"submit\">Add Customer</button>\r\n  </form>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let customer of customers\">\r\n      {{ customer.name }} - {{ customer.email }} - {{ customer.phoneNumber }}\r\n      <button (click)=\"deleteCustomer(customer.id)\">Delete</button>\r\n      <button (click)=\"updateCustomer(customer.id)\">Edit</button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from '../services/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html'\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  customers: any[] = [];\r\n  errorMessage: string = '';\r\n  loading: boolean = false;\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.customerService.getAllCustomers()\r\n      .subscribe({\r\n        next: (data) => {\r\n          this.customers = data;\r\n          this.loading = false;\r\n          console.log('Customers loaded:', data);\r\n        },\r\n        error: (error) => {\r\n          this.errorMessage = 'Error loading customers: ' + error.message;\r\n          this.loading = false;\r\n          console.error('Error:', error);\r\n        }\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}