{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/customer.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CustomerListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function CustomerListComponent_div_8_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.error = null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction CustomerListComponent_div_9_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Name is required (min 2 characters) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerListComponent_div_9_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Valid email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerListComponent_div_9_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Valid phone number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerListComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"form\", 15);\n    i0.ɵɵlistener(\"ngSubmit\", function CustomerListComponent_div_9_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 16)(3, \"label\", 17);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 18);\n    i0.ɵɵtemplate(6, CustomerListComponent_div_9_div_6_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 16)(8, \"label\", 20);\n    i0.ɵɵtext(9, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 21);\n    i0.ɵɵtemplate(11, CustomerListComponent_div_9_div_11_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 16)(13, \"label\", 22);\n    i0.ɵɵtext(14, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 23);\n    i0.ɵɵtemplate(16, CustomerListComponent_div_9_div_16_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 24)(18, \"button\", 25);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function CustomerListComponent_div_9_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.resetForm());\n    });\n    i0.ɵɵtext(21, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.customerForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.customerForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r1.customerForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.customerForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r1.customerForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r1.customerForm.get(\"phoneNumber\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r1.customerForm.get(\"phoneNumber\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.customerForm.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.editingCustomer ? \"Update\" : \"Add\", \" Customer \");\n  }\n}\nfunction CustomerListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 28);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CustomerListComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CustomerListComponent_tr_24_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const customer_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.editCustomer(customer_r13));\n    });\n    i0.ɵɵtext(9, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function CustomerListComponent_tr_24_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const customer_r13 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.deleteCustomer(customer_r13.id));\n    });\n    i0.ɵɵtext(11, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const customer_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r13.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r13.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r13.phoneNumber);\n  }\n}\nfunction CustomerListComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 28);\n    i0.ɵɵtext(2, \"No customers found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class CustomerListComponent {\n  constructor(customerService, fb) {\n    this.customerService = customerService;\n    this.fb = fb;\n    this.customers = [];\n    this.loading = true;\n    this.error = null;\n    this.editingCustomer = null;\n    this.showForm = false;\n    this.customerForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9-]+$')]]\n    });\n  }\n  ngOnInit() {\n    this.loadCustomers();\n  }\n  loadCustomers() {\n    this.loading = true;\n    this.customerService.getAllCustomers().subscribe({\n      next: data => {\n        this.customers = data;\n        this.loading = false;\n      },\n      error: error => {\n        this.error = error;\n        this.loading = false;\n      }\n    });\n  }\n  onSubmit() {\n    if (this.customerForm.valid) {\n      if (this.editingCustomer) {\n        this.customerService.updateCustomer(this.editingCustomer.id, {\n          ...this.editingCustomer,\n          ...this.customerForm.value\n        }).subscribe({\n          next: () => {\n            this.loadCustomers();\n            this.resetForm();\n          },\n          error: error => this.error = error\n        });\n      } else {\n        this.customerService.createCustomer(this.customerForm.value).subscribe({\n          next: () => {\n            this.loadCustomers();\n            this.resetForm();\n          },\n          error: error => this.error = error\n        });\n      }\n    }\n  }\n  editCustomer(customer) {\n    this.editingCustomer = customer;\n    this.customerForm.patchValue(customer);\n    this.showForm = true;\n  }\n  deleteCustomer(id) {\n    if (confirm('Are you sure you want to delete this customer?')) {\n      this.customerService.deleteCustomer(id).subscribe({\n        next: () => this.loadCustomers(),\n        error: error => this.error = error\n      });\n    }\n  }\n  resetForm() {\n    this.customerForm.reset();\n    this.editingCustomer = null;\n    this.showForm = false;\n  }\n}\nCustomerListComponent.ɵfac = function CustomerListComponent_Factory(t) {\n  return new (t || CustomerListComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCustomerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerListComponent,\n  selectors: [[\"app-customer-list\"]],\n  decls: 26,\n  vars: 6,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card-body\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"mb-4\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"mb-4\"], [1, \"row\", \"g-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-4\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phoneNumber\", 1, \"form-label\"], [\"type\", \"tel\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"me-2\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"text-danger\"], [\"colspan\", \"4\", 1, \"text-center\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function CustomerListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Customer Management\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CustomerListComponent_Template_button_click_5_listener() {\n        return ctx.showForm = !ctx.showForm;\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtemplate(8, CustomerListComponent_div_8_Template, 3, 1, \"div\", 6);\n      i0.ɵɵtemplate(9, CustomerListComponent_div_9_Template, 22, 6, \"div\", 7);\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"table\", 9)(12, \"thead\")(13, \"tr\")(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\");\n      i0.ɵɵtemplate(23, CustomerListComponent_tr_23_Template, 3, 0, \"tr\", 10);\n      i0.ɵɵtemplate(24, CustomerListComponent_tr_24_Template, 12, 3, \"tr\", 11);\n      i0.ɵɵtemplate(25, CustomerListComponent_tr_25_Template, 3, 0, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\" \", ctx.showForm ? \"Hide Form\" : \"Add Customer\", \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.customers.length === 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\".card[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\\r\\n}\\r\\n\\r\\n.card-header[_ngcontent-%COMP%] {\\r\\n  background-color: #f8f9fa;\\r\\n}\\r\\n\\r\\n.table[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.btn-sm[_ngcontent-%COMP%] {\\r\\n  padding: 0.25rem 0.5rem;\\r\\n  font-size: 0.875rem;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%]:focus {\\r\\n  border-color: #80bdff;\\r\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\r\\n}\\r\\n\\r\\n.alert[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n.table-responsive[_ngcontent-%COMP%] {\\r\\n  margin-top: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jdXN0b21lci1saXN0L2N1c3RvbWVyLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1EQUFtRDtBQUNyRDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsZ0RBQWdEO0FBQ2xEOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIGJveC1zaGFkb3c6IDAgMC4xMjVyZW0gMC4yNXJlbSByZ2JhKDAsIDAsIDAsIDAuMDc1KTtcclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG59XHJcblxyXG4udGFibGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5idG4tc20ge1xyXG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xyXG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG4gIGJvcmRlci1jb2xvcjogIzgwYmRmZjtcclxuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgwLCAxMjMsIDI1NSwgMC4yNSk7XHJcbn1cclxuXHJcbi5hbGVydCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxufVxyXG5cclxuLnRhYmxlLXJlc3BvbnNpdmUge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICS7DC,+BAAuF;IACrFA,YACA;IAAAA,kCAA+D;IAAvBA;MAAAA;MAAA;MAAA,qCAAiB,IAAI;IAAA,EAAC;IAACA,iBAAS;;;;IADxEA,eACA;IADAA,6CACA;;;;;IASIA,+BAAwG;IACtGA,qDACF;IAAAA,iBAAM;;;;;IAMNA,+BAA0G;IACxGA,yCACF;IAAAA,iBAAM;;;;;IAMNA,+BAAsH;IACpHA,gDACF;IAAAA,iBAAM;;;;;;IAvBZA,+BAAmC;IACAA;MAAAA;MAAA;MAAA,OAAYA,iCAAU;IAAA,EAAC;IACtDA,+BAAsB;IACiBA,oBAAI;IAAAA,iBAAQ;IACjDA,4BAAyE;IACzEA,6EAEM;IACRA,iBAAM;IAENA,+BAAsB;IACkBA,qBAAK;IAAAA,iBAAQ;IACnDA,6BAA4E;IAC5EA,+EAEM;IACRA,iBAAM;IAENA,gCAAsB;IACwBA,6BAAY;IAAAA,iBAAQ;IAChEA,6BAAsF;IACtFA,+EAEM;IACRA,iBAAM;IAENA,gCAAoB;IAEhBA,aACF;IAAAA,iBAAS;IACTA,mCAAsE;IAAtBA;MAAAA;MAAA;MAAA,OAASA,kCAAW;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;;;;IA7BnFA,eAA0B;IAA1BA,+CAA0B;IAItBA,eAA4E;IAA5EA,uLAA4E;IAQ5EA,eAA8E;IAA9EA,yLAA8E;IAQ9EA,eAA0F;IAA1FA,qMAA0F;IAM7CA,eAAgC;IAAhCA,qDAAgC;IACjFA,eACF;IADEA,mFACF;;;;;IAkBAA,0BAAoB;IACkBA,0BAAU;IAAAA,iBAAK;;;;;;IAErDA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAA0B;IAAAA,iBAAK;IACnCA,0BAAI;IAC0CA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAsB;IAAA,EAAC;IAC1EA,sBACF;IAAAA,iBAAS;IACTA,mCAA4E;IAAtCA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA2B;IAAA,EAAC;IACzEA,yBACF;IAAAA,iBAAS;;;;IATPA,eAAmB;IAAnBA,uCAAmB;IACnBA,eAAoB;IAApBA,wCAAoB;IACpBA,eAA0B;IAA1BA,8CAA0B;;;;;IAUhCA,0BAA+C;IACTA,kCAAkB;IAAAA,iBAAK;;;ADxEzE,OAAM,MAAOC,qBAAqB;EAQhCC,YACUC,eAAgC,EAChCC,EAAe;IADf,oBAAe,GAAfD,eAAe;IACf,OAAE,GAAFC,EAAE;IATZ,cAAS,GAAe,EAAE;IAC1B,YAAO,GAAG,IAAI;IACd,UAAK,GAAkB,IAAI;IAE3B,oBAAe,GAAoB,IAAI;IACvC,aAAQ,GAAG,KAAK;IAMd,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,OAAO,CAAC,WAAW,CAAC,CAAC;KACzE,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACZ,eAAe,CAACa,eAAe,EAAE,CAACC,SAAS,CAAC;MAC/CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,SAAS,GAAGD,IAAI;QACrB,IAAI,CAACJ,OAAO,GAAG,KAAK;MACtB,CAAC;MACDM,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACN,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAO,QAAQ;IACN,IAAI,IAAI,CAACjB,YAAY,CAACkB,KAAK,EAAE;MAC3B,IAAI,IAAI,CAACC,eAAe,EAAE;QACxB,IAAI,CAACrB,eAAe,CAACsB,cAAc,CACjC,IAAI,CAACD,eAAe,CAACE,EAAE,EACvB;UAAE,GAAG,IAAI,CAACF,eAAe;UAAE,GAAG,IAAI,CAACnB,YAAY,CAACsB;QAAK,CAAE,CACxD,CAACV,SAAS,CAAC;UACVC,IAAI,EAAE,MAAK;YACT,IAAI,CAACJ,aAAa,EAAE;YACpB,IAAI,CAACc,SAAS,EAAE;UAClB,CAAC;UACDP,KAAK,EAAGA,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA;SAChC,CAAC;OACH,MAAM;QACL,IAAI,CAAClB,eAAe,CAAC0B,cAAc,CAAC,IAAI,CAACxB,YAAY,CAACsB,KAAK,CAAC,CAACV,SAAS,CAAC;UACrEC,IAAI,EAAE,MAAK;YACT,IAAI,CAACJ,aAAa,EAAE;YACpB,IAAI,CAACc,SAAS,EAAE;UAClB,CAAC;UACDP,KAAK,EAAGA,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA;SAChC,CAAC;;;EAGR;EAEAS,YAAY,CAACC,QAAkB;IAC7B,IAAI,CAACP,eAAe,GAAGO,QAAQ;IAC/B,IAAI,CAAC1B,YAAY,CAAC2B,UAAU,CAACD,QAAQ,CAAC;IACtC,IAAI,CAACE,QAAQ,GAAG,IAAI;EACtB;EAEAC,cAAc,CAACR,EAAU;IACvB,IAAIS,OAAO,CAAC,gDAAgD,CAAC,EAAE;MAC7D,IAAI,CAAChC,eAAe,CAAC+B,cAAc,CAACR,EAAE,CAAC,CAACT,SAAS,CAAC;QAChDC,IAAI,EAAE,MAAM,IAAI,CAACJ,aAAa,EAAE;QAChCO,KAAK,EAAGA,KAAK,IAAK,IAAI,CAACA,KAAK,GAAGA;OAChC,CAAC;;EAEN;EAEAO,SAAS;IACP,IAAI,CAACvB,YAAY,CAAC+B,KAAK,EAAE;IACzB,IAAI,CAACZ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACS,QAAQ,GAAG,KAAK;EACvB;;AAjFWhC,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTlCzC,8BAA4B;MAGLA,mCAAmB;MAAAA,iBAAK;MACzCA,iCAA+D;MAA/BA;QAAA;MAAA,EAA8B;MAC5DA,YACF;MAAAA,iBAAS;MAGXA,8BAAuB;MAErBA,sEAGM;MAGNA,uEAiCM;MAGNA,+BAA8B;MAIlBA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGpBA,8BAAO;MACLA,uEAEK;MACLA,wEAYK;MACLA,uEAEK;MACPA,iBAAQ;;;MA9EVA,eACF;MADEA,4EACF;MAKMA,eAAW;MAAXA,gCAAW;MAMXA,eAAc;MAAdA,mCAAc;MA+CTA,gBAAa;MAAbA,kCAAa;MAGOA,eAAY;MAAZA,uCAAY;MAahCA,eAAwC;MAAxCA,iEAAwC","names":["Validators","i0","CustomerListComponent","constructor","customerService","fb","customerForm","group","name","required","minLength","email","phoneNumber","pattern","ngOnInit","loadCustomers","loading","getAllCustomers","subscribe","next","data","customers","error","onSubmit","valid","editingCustomer","updateCustomer","id","value","resetForm","createCustomer","editCustomer","customer","patchValue","showForm","deleteCustomer","confirm","reset","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Visual Studio 2022\\CRMSystem\\ClientApp\\src\\app\\components\\customer-list\\customer-list.component.ts","D:\\Visual Studio 2022\\CRMSystem\\ClientApp\\src\\app\\components\\customer-list\\customer-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService, Customer } from '../../services/customer.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css']\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\n  customers: Customer[] = [];\r\n  loading = true;\r\n  error: string | null = null;\r\n  customerForm: FormGroup;\r\n  editingCustomer: Customer | null = null;\r\n  showForm = false;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.customerForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9-]+$')]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadCustomers();\r\n  }\r\n\r\n  loadCustomers() {\r\n    this.loading = true;\r\n    this.customerService.getAllCustomers().subscribe({\r\n      next: (data) => {\r\n        this.customers = data;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.error = error;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.customerForm.valid) {\r\n      if (this.editingCustomer) {\r\n        this.customerService.updateCustomer(\r\n          this.editingCustomer.id,\r\n          { ...this.editingCustomer, ...this.customerForm.value }\r\n        ).subscribe({\r\n          next: () => {\r\n            this.loadCustomers();\r\n            this.resetForm();\r\n          },\r\n          error: (error) => this.error = error\r\n        });\r\n      } else {\r\n        this.customerService.createCustomer(this.customerForm.value).subscribe({\r\n          next: () => {\r\n            this.loadCustomers();\r\n            this.resetForm();\r\n          },\r\n          error: (error) => this.error = error\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  editCustomer(customer: Customer) {\r\n    this.editingCustomer = customer;\r\n    this.customerForm.patchValue(customer);\r\n    this.showForm = true;\r\n  }\r\n\r\n  deleteCustomer(id: number) {\r\n    if (confirm('Are you sure you want to delete this customer?')) {\r\n      this.customerService.deleteCustomer(id).subscribe({\r\n        next: () => this.loadCustomers(),\r\n        error: (error) => this.error = error\r\n      });\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.customerForm.reset();\r\n    this.editingCustomer = null;\r\n    this.showForm = false;\r\n  }\r\n} ","<div class=\"container mt-4\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n      <h2 class=\"mb-0\">Customer Management</h2>\r\n      <button class=\"btn btn-primary\" (click)=\"showForm = !showForm\">\r\n        {{ showForm ? 'Hide Form' : 'Add Customer' }}\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"card-body\">\r\n      <!-- Error Alert -->\r\n      <div *ngIf=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n        {{ error }}\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"error = null\"></button>\r\n      </div>\r\n\r\n      <!-- Customer Form -->\r\n      <div *ngIf=\"showForm\" class=\"mb-4\">\r\n        <form [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit()\" class=\"row g-3\">\r\n          <div class=\"col-md-4\">\r\n            <label for=\"name\" class=\"form-label\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\r\n            <div *ngIf=\"customerForm.get('name')?.invalid && customerForm.get('name')?.touched\" class=\"text-danger\">\r\n              Name is required (min 2 characters)\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"col-md-4\">\r\n            <label for=\"email\" class=\"form-label\">Email</label>\r\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\r\n            <div *ngIf=\"customerForm.get('email')?.invalid && customerForm.get('email')?.touched\" class=\"text-danger\">\r\n              Valid email is required\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"col-md-4\">\r\n            <label for=\"phoneNumber\" class=\"form-label\">Phone Number</label>\r\n            <input type=\"tel\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n            <div *ngIf=\"customerForm.get('phoneNumber')?.invalid && customerForm.get('phoneNumber')?.touched\" class=\"text-danger\">\r\n              Valid phone number is required\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"col-12\">\r\n            <button type=\"submit\" class=\"btn btn-success me-2\" [disabled]=\"!customerForm.valid\">\r\n              {{ editingCustomer ? 'Update' : 'Add' }} Customer\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetForm()\">Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Customer List -->\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-striped table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone Number</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngIf=\"loading\">\r\n              <td colspan=\"4\" class=\"text-center\">Loading...</td>\r\n            </tr>\r\n            <tr *ngFor=\"let customer of customers\">\r\n              <td>{{ customer.name }}</td>\r\n              <td>{{ customer.email }}</td>\r\n              <td>{{ customer.phoneNumber }}</td>\r\n              <td>\r\n                <button class=\"btn btn-sm btn-primary me-2\" (click)=\"editCustomer(customer)\">\r\n                  Edit\r\n                </button>\r\n                <button class=\"btn btn-sm btn-danger\" (click)=\"deleteCustomer(customer.id)\">\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"!loading && customers.length === 0\">\r\n              <td colspan=\"4\" class=\"text-center\">No customers found</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}